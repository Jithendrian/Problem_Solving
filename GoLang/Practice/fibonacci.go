package main

import "fmt"
/*


Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

 */

var(
	fibonacci = make(map[int]int)
	evenValues[] int
)

func generateFibonacci()  {
	i := 2
	for true{
		fibonacci[i] = fibonacci[i-1] + fibonacci[i-2]
		if fibonacci[i] > 4000000 {
			delete(fibonacci, i)
			break
		}
		i += 1
	}
}

func main() {
	fibonacci[0] = 1
	fibonacci[1] = 2
	generateFibonacci()
	sum := 0
	fmt.Println(fibonacci)

	for k:=0; k <len(fibonacci); k += 1 {
		if fibonacci[k] % 2 == 0 {
			evenValues = append(evenValues, fibonacci[k])
		}
	}

	for n:=0; n < len(evenValues); n +=1 {
		sum = sum + evenValues[n]
	}
	println(sum)
}
